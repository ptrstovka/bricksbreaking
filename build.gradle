buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.8'
    }
}

group 'com.peterstovka.universe'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'de.fuerstenau.buildconfig'

sourceCompatibility = 1.8

mainClassName = 'com.peterstovka.universe.bricksbreaking.Application'

File secretPropsFile = file('./local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    throw new IllegalStateException("local.properties could not be located for build process")
}

buildConfig {
    appName = project.name
    version = project.version

    clsName = 'BuildConfig'
    packageName = project.group
    charset = 'UTF-8'

    buildConfigField 'String', 'POSTGRE_DB_USER', project.postgreUser
    buildConfigField 'String', 'POSTGRE_DB_PASS', project.postgrePass
    buildConfigField 'String', 'POSTGRE_DB_URL', project.postgreUrl

    buildConfigField 'String', 'POSTGRE_TEST_DB_USER', project.postgreTestUser
    buildConfigField 'String', 'POSTGRE_TEST_DB_PASS', project.postgreTestPass
    buildConfigField 'String', 'POSTGRE_TEST_DB_URL', project.postgreTestUrl
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }

    test {
        java {
            srcDir 'test'
        }
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.1'
}
